{
  "name": "@my-scope/{{ projectName }}",
  "version": "0.1.0",
  "description": "A source xPack with a Hello World application",
  "main": "",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/{{ githubId }}/{{ projectName }}.git"
  },
  "bugs": {
    "url": "https://github.com/{{ githubId }}/{{ projectName }}/issues/"
  },
  "homepage": "https://github.com/{{ githubId }}/{{ projectName }}/",
  "keywords": [
    "xpack"
  ],
  "author": {
    "name": "{{ author.name }}",
    "email": "{{ author.email }}",
    "url": "{{ author.url }}"
  },
  "contributors": [
    {
      "name": "Liviu Ionescu",
      "email": "ilg@livius.net",
      "url": "https://github.com/ilg-ul/"
    }
  ],
  "license": "MIT",
  "config": {},
  "dependencies": {},
  "devDependencies": {
{% if buildGenerator == "cmake" -%}
    "@xpack-dev-tools/cmake": "3.19.2-2.1",
    "@xpack-dev-tools/ninja-build": "1.10.2-3.1"
{% elsif buildGenerator == "meson" -%}
    "@xpack-dev-tools/meson-build": "0.56.2-2.1",
    "@xpack-dev-tools/ninja-build": "1.10.2-3.1"
{% elsif buildGenerator == "autotools" -%}
    "@xpack-dev-tools/windows-build-tools": "@4.2.1-2.1"
{% endif -%}
  },
  "xpack": {
    "properties": { 
      {% raw %}"buildFolderRelativePath": "build{% if os.platform == 'win32' %}\\{% else %}/{% endif %}{{ configuration.name | downcase }}",{% endraw %}
{% if buildGenerator == "cmake" -%}
      {% raw %}"commandPrepare": "cmake -S meta -B {{ properties.buildFolderRelativePath }} -G Ninja -D CMAKE_BUILD_TYPE={{ properties.buildType }} -D CMAKE_EXPORT_COMPILE_COMMANDS=ON",
      "commandReconfigure": "{{ properties.commandPrepare }}",
      "commandBuild": "cmake --build {{ properties.buildFolderRelativePath }} --verbose",
      "commandClean": "cmake --build {{ properties.buildFolderRelativePath }} --target clean",{% endraw %}
{% elsif buildGenerator == "meson" -%}
      {% raw %}"commandPrepare": "meson setup --backend ninja --buildtype {{ properties.buildType }} {{ properties.buildFolderRelativePath }} meta",
      "commandReconfigure": "meson setup --reconfigure {{ properties.buildFolderRelativePath }} meta",
      "commandBuild": "meson compile -C {{ properties.buildFolderRelativePath }} -v",
      "commandClean": "meson compile -C {{ properties.buildFolderRelativePath }} --clean",{% endraw %}
{% elsif buildGenerator == "autotools" -%}
      {% raw %}"commandPrepare": "{% if os.platform == 'win32' %}mkdir{% else %}mkdir -p{% endif %} {{ properties.buildFolderRelativePath }} && cd {{ properties.buildFolderRelativePath }} && sh {% if os.platform == 'win32' %}..\\..\\meta\\configure{% else %}../../meta/configure{% endif %} ../..",
      "commandReconfigure": "{{ properties.commandPrepare }}",
      "commandBuild": "cd {{ properties.buildFolderRelativePath }} && make all BUILD_TYPE={{ properties.buildType }}",
      "commandClean": "cd {{ properties.buildFolderRelativePath }} && make clean BUILD_TYPE={{ properties.buildType }}",{% endraw %}
{% endif -%}
      {% raw %}"commandExecuteHello": "{{ properties.buildFolderRelativePath }}{% if os.platform == 'win32' %}\\{% else %}/{% endif %}hello-world"{% endraw %}
    },
    "actions": {
      "prepare-all": [
        "xpm run prepare --config Debug",
        "xpm run prepare --config Release"
      ],
      "build-all": [
        "xpm run build --config Debug",
        "xpm run build --config Release"
      ],
      "clean-all": [
        "xpm run clean --config Debug",
        "xpm run clean --config Release"
      ],
      "execute-all": [
        "xpm run execute --config Debug",
        "xpm run execute --config Release"
      ],
      "test": [
        "xpm run prepare-all",
        "xpm run build-all",
        "xpm run execute-all"
      ]{% if buildGenerator == "cmake" -%},
      "deep-clean": "cmake -E rm -rf build xpacks"
{% elsif buildGenerator == "meson" -%},
      "deep-clean": "echo Not implemented"
{% elsif buildGenerator == "autotools" -%},
      "deep-clean": "rm -rf build xpacks"
{% endif -%}
    },
    "buildConfigurations": {
      "Debug": {
        "properties": {
{% if buildGenerator == "cmake" -%}
          "buildType": "Debug"
{% elsif buildGenerator == "meson" -%}
          "buildType": "debug"
{% elsif buildGenerator == "autotools" -%}
          "buildType": "debug"
{% endif -%}
        },
        "actions": {
          {% raw %}"prepare": "{{ properties.commandPrepare }}",
          "build": [
            "{{ properties.commandReconfigure }}",
            "{{ properties.commandBuild }}"
          ],
          "clean": "{{ properties.commandClean }}",
          "execute": "{{ properties.commandExecuteHello }}"{% endraw %}
        }
      },
      "Release": {
        "properties": {
{% if buildGenerator == "cmake" -%}
          "buildType": "Release"
{% elsif buildGenerator == "meson" -%}
          "buildType": "release"
{% elsif buildGenerator == "autotools" -%}
          "buildType": "release"
{% endif -%}
        },
        "actions": {
          {% raw %}"prepare": "{{ properties.commandPrepare }}",
          "build": [
            "{{ properties.commandReconfigure }}",
            "{{ properties.commandBuild }}"
          ],
          "clean": "{{ properties.commandClean }}",
          "execute": "{{ properties.commandExecuteHello }}"{% endraw %}
        }
      }
    }
  }
}
